from re import findall
from typing import Any
from tqdm import tqdm
from promptwizard.utils import save_jsonlist
from promptwizard.dataset_scenario import DatasetSpecificProcessing

class SemanticDataset(DatasetSpecificProcessing):
    def dataset_to_jsonl(self, dataset_jsonl: str, **kwargs: Any) -> None:
        """
        Convert dataset into PromptWizard-compatible JSONL format
        Expected dataset structure:
        [
            {"question": "...", "answer": "...", "ground_truth": "..."},
            ...
        ]
        """
        examples_set = []
        for _, sample in tqdm(enumerate(kwargs["dataset"]), desc="Processing Semantic Samples"):
            example = {
                DatasetSpecificProcessing.QUESTION_LITERAL: sample['question'],
                DatasetSpecificProcessing.ANSWER_WITH_REASON_LITERAL: sample['answer'],  # model response
            }
            examples_set.append(example)

        save_jsonlist(dataset_jsonl, examples_set, "w")

    def extract_final_answer(self, answer: str) -> str:
        """
        For semantic datasets, the 'final answer' is usually the text itself
        (we don't strip numbers like GSM8k).
        """
        if not answer:
            return self.INVALID_ANS
        return answer.strip()
